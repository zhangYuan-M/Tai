<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta
			name="viewport"
			content="width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no"
		/>
		<title>Document</title>
		<link rel="stylesheet" href="./css/tai.css" />
	</head>
	<body>
		<div id="wrap">
			<div class="head">
				<div class="head-top">
					<!-- 1. logo区域 -->
					<h1 class="logo">
						<a href="http://www.baidu.com"><img src="./img/logo.png" /></a>
					</h1>

					<!-- 2. 面包屑导航 active -->
					<a href="javascript:;" class="bread-nav"></a>

					<!-- 3. 按钮区域 -->
					<div class="btns-box">
						<a href="">搜索</a>
						<a href="">登录</a>
						<a href="">注册</a>
					</div>
				</div>
				<div class="head-bottom">
					<input type="text" placeholder="请碰我一下" />
					<input type="submit" name="搜索" id="" />
				</div>
				<div class="head-mask">
					<ul class="mask">
						<li>
							<a href="javascript:;">首页</a>
						</li>
						<li>
							<a href="javascript:;">MV</a>
						</li>
						<li>
							<a href="javascript:;">悦单</a>
						</li>
						<li>
							<a href="javascript:;">V榜</a>
						</li>
						<li>
							<a href="javascript:;">音乐</a>
						</li>
						<li>
							<a href="javascript:;">商城</a>
						</li>
						<li>
							<a href="javascript:;">节目</a>
						</li>
						<li>
							<a href="javascript:;">饭团</a>
						</li>
						<li>
							<a href="javascript:;">咨询</a>
						</li>
						<li>
							<a href="javascript:;">我的家</a>
						</li>
						<li>
							<a href="javascript:;">APP下载</a>
						</li>
						<li>
							<a href="javascript:;">热门应用</a>
						</li>
					</ul>
				</div>
			</div>
			<div class="scroll-warp">
				<div class="content">
					<!-- 自定义的组件 横向滑屏 -->
					<div class="content-nav">
						<ul class="nav-list">
							<li class="active">
								<a href="javascript:;">首页</a>
							</li>
							<li>
								<a href="javascript:;">MV</a>
							</li>
							<li>
								<a href="javascript:;">悦单</a>
							</li>
							<li>
								<a href="javascript:;">V榜</a>
							</li>
							<li>
								<a href="javascript:;">音乐</a>
							</li>
							<li>
								<a href="javascript:;">商城</a>
							</li>
							<li>
								<a href="javascript:;">节目</a>
							</li>
							<li>
								<a href="javascript:;">饭团</a>
							</li>
							<li>
								<a href="javascript:;">咨询</a>
							</li>
							<li>
								<a href="javascript:;">我的家</a>
							</li>
							<li>
								<a href="javascript:;">APP下载</a>
							</li>
							<li>
								<a href="javascript:;">热门应用</a>
							</li>
							<li>
								<a href="javascript:;">热门应用</a>
							</li>
							<li>
								<a href="javascript:;">热门应用</a>
							</li>
							<li>
								<a href="javascript:;">热门应用</a>
							</li>
						</ul>
					</div>
					<!-- 自定义的组件 轮播 -->
					<div class="wrap">
						<div class="carousel-wrap" showCarousel autoMove>
							<div class="points-wrap"></div>
						</div>
					</div>
					<!-- tab选项卡 -->
					<div class="tab">
						<div class="tab-head">
							<h2>MV榜单</h2>
							<span>更多>></span>
						</div>
						<div class="tab-nav">
							<a href="javascript:;" class="active">全部</a>
							<a href="javascript:;">内地</a>
							<a href="javascript:;">美国</a>
							<a href="javascript:;">欧美</a>
							<a href="javascript:;">韩国</a>
							<a href="javascript:;">日本</a>
							<span class="greenFollow"></span>
						</div>
						<div class="tab-content">
							<ul class="loding"></ul>
							<ul class="center">
								<li>
									<a href="javascript:;">
										<img src="./img/a.jpg" alt="" />
										<span>君に贈る花がないがないがないがないがないがないがない</span>
									</a>
									<div class="tab-discuss">
										<div class="left">9839</div>
										<div class="right">238</div>
									</div>
								</li>
								<li>
									<a href="javascript:;">
										<img src="./img/f.jpg" alt="" />
										<span>君に贈る花がないがないがないがないがないがないがない</span>
									</a>
									<div class="tab-discuss">
										<div class="left">9839</div>
										<div class="right">238</div>
									</div>
								</li>
								<li>
									<a href="javascript:;">
										<img src="./img/b.jpg" alt="" />
										<span>君に贈る花がないがないがないがないがないがないがない</span>
									</a>
									<div class="tab-discuss">
										<div class="left">9839</div>
										<div class="right">238</div>
									</div>
								</li>
								<li>
									<a href="javascript:;">
										<img src="./img/c.jpg" alt="" />
										<span>君に贈る花がないがないがないがないがないがないがない</span>
									</a>
									<div class="tab-discuss">
										<div class="left">9839</div>
										<div class="right">238</div>
									</div>
								</li>
								<li>
									<a href="javascript:;">
										<img src="./img/e.jpg" alt="" />
										<span>君に贈る花がないがないがないがないがないがないがない</span>
									</a>
									<div class="tab-discuss">
										<div class="left">9839</div>
										<div class="right">238</div>
									</div>
								</li>
								<li>
									<a href="javascript:;">
										<img src="./img/d.jpg" alt="" />
										<span>君に贈る花がないがないがないがないがないがないがない</span>
									</a>
									<div class="tab-discuss">
										<div class="left">9839</div>
										<div class="right">238</div>
									</div>
								</li>
							</ul>
							<ul class="loding"></ul>
						</div>
					</div>
					<div class="tab">
						<div class="tab-head">
							<h2>MV榜单</h2>
							<span>更多>></span>
						</div>
						<div class="tab-nav">
							<a href="javascript:;" class="active">全部</a>
							<a href="javascript:;">内地</a>
							<a href="javascript:;">美国</a>
							<a href="javascript:;">欧美</a>
							<a href="javascript:;">韩国</a>
							<a href="javascript:;">日本</a>
							<span class="greenFollow"></span>
						</div>
						<div class="tab-content">
							<ul class="loding"></ul>
							<ul class="center">
								<li>
									<a href="javascript:;">
										<img src="./img/a.jpg" alt="" />
										<span>君に贈る花がないがないがないがないがないがないがない</span>
									</a>
									<div class="tab-discuss">
										<div class="left">9839</div>
										<div class="right">238</div>
									</div>
								</li>
								<li>
									<a href="javascript:;">
										<img src="./img/f.jpg" alt="" />
										<span>君に贈る花がないがないがないがないがないがないがない</span>
									</a>
									<div class="tab-discuss">
										<div class="left">9839</div>
										<div class="right">238</div>
									</div>
								</li>
								<li>
									<a href="javascript:;">
										<img src="./img/b.jpg" alt="" />
										<span>君に贈る花がないがないがないがないがないがないがない</span>
									</a>
									<div class="tab-discuss">
										<div class="left">9839</div>
										<div class="right">238</div>
									</div>
								</li>
								<li>
									<a href="javascript:;">
										<img src="./img/c.jpg" alt="" />
										<span>君に贈る花がないがないがないがないがないがないがない</span>
									</a>
									<div class="tab-discuss">
										<div class="left">9839</div>
										<div class="right">238</div>
									</div>
								</li>
								<li>
									<a href="javascript:;">
										<img src="./img/e.jpg" alt="" />
										<span>君に贈る花がないがないがないがないがないがないがない</span>
									</a>
									<div class="tab-discuss">
										<div class="left">9839</div>
										<div class="right">238</div>
									</div>
								</li>
								<li>
									<a href="javascript:;">
										<img src="./img/d.jpg" alt="" />
										<span>君に贈る花がないがないがないがないがないがないがない</span>
									</a>
									<div class="tab-discuss">
										<div class="left">9839</div>
										<div class="right">238</div>
									</div>
								</li>
							</ul>
							<ul class="loding"></ul>
						</div>
					</div>
					<div class="tab">
						<div class="tab-head">
							<h2>MV榜单</h2>
							<span>更多>></span>
						</div>
						<div class="tab-nav">
							<a href="javascript:;" class="active">全部</a>
							<a href="javascript:;">内地</a>
							<a href="javascript:;">美国</a>
							<a href="javascript:;">欧美</a>
							<a href="javascript:;">韩国</a>
							<a href="javascript:;">日本</a>
							<span class="greenFollow"></span>
						</div>
						<div class="tab-content">
							<ul class="loding"></ul>
							<ul class="center">
								<li>
									<a href="javascript:;">
										<img src="./img/a.jpg" alt="" />
										<span>君に贈る花がないがないがないがないがないがないがない</span>
									</a>
									<div class="tab-discuss">
										<div class="left">9839</div>
										<div class="right">238</div>
									</div>
								</li>
								<li>
									<a href="javascript:;">
										<img src="./img/f.jpg" alt="" />
										<span>君に贈る花がないがないがないがないがないがないがない</span>
									</a>
									<div class="tab-discuss">
										<div class="left">9839</div>
										<div class="right">238</div>
									</div>
								</li>
								<li>
									<a href="javascript:;">
										<img src="./img/b.jpg" alt="" />
										<span>君に贈る花がないがないがないがないがないがないがない</span>
									</a>
									<div class="tab-discuss">
										<div class="left">9839</div>
										<div class="right">238</div>
									</div>
								</li>
								<li>
									<a href="javascript:;">
										<img src="./img/c.jpg" alt="" />
										<span>君に贈る花がないがないがないがないがないがないがない</span>
									</a>
									<div class="tab-discuss">
										<div class="left">9839</div>
										<div class="right">238</div>
									</div>
								</li>
								<li>
									<a href="javascript:;">
										<img src="./img/e.jpg" alt="" />
										<span>君に贈る花がないがないがないがないがないがないがない</span>
									</a>
									<div class="tab-discuss">
										<div class="left">9839</div>
										<div class="right">238</div>
									</div>
								</li>
								<li>
									<a href="javascript:;">
										<img src="./img/d.jpg" alt="" />
										<span>君に贈る花がないがないがないがないがないがないがない</span>
									</a>
									<div class="tab-discuss">
										<div class="left">9839</div>
										<div class="right">238</div>
									</div>
								</li>
							</ul>
							<ul class="loding"></ul>
						</div>
					</div>
				</div>
			</div>
		</div>
		<script src="./js/tools.js"></script>
		<script>
			window.onload = function () {
				// 移动端适配方案
				document.querySelector('#wrap').addEventListener('touchstart', function (e) {
					e = e || event
					e.preventDefault()
				})
				;(function () {
					const styleNode = document.createElement('style')
					const size = document.documentElement.clientWidth / 16
					styleNode.innerHTML = `html{font-size:${size}px !important}`
					document.head.appendChild(styleNode)
				})()

				/**
				 * 搜索框显示和隐藏
				 */
				searchInputShow()
				function searchInputShow() {
					const inputNode = document.querySelector('.head-bottom') // head-bottom 输入框的结构
					const wrapNode = document.querySelector('.scroll-warp') // 事件委托的父元素对象
					const contetnNode = wrapNode.children[0] // 滑动元素
					let startPoint = { x: 0, y: 0 }
					let elePoint = { x: 0, y: 0 }
					wrapNode.addEventListener('touchstart', e => {
						e = e || event
						let touchC = e.changedTouches[0]
						startPoint.y = touchC.clientY
						elePoint.y = mark.css(contetnNode, 'translateY')
					})
					wrapNode.addEventListener('touchmove', e => {
						e = e || event
						let touchC = e.changedTouches[0]
						let disY = touchC.clientY - startPoint.y
						if (-disY > 70) {
							let inputHeight = inputNode.offsetHeight
							inputNode.style.opacity = '0'
							wrapNode.style.height = 'calc(100vh - 2rem)'
							wrapNode.style.top = '2rem'
						}
						if (disY > 100) {
							inputNode.style.opacity = '1'
							wrapNode.style.height = 'calc(100vh - 3.9rem)'
							wrapNode.style.top = '3.9rem'
						}
					})
					const btnNode = document.querySelector('.btns-box').children[0]
					btnNode.addEventListener('touchstart', function () {
						inputNode.style.opacity = '1'
						wrapNode.style.height = 'calc(100vh - 3.9rem)'
						wrapNode.style.top = '3.9rem'
					})
				}

				/**
				 * 切换频道按钮显示遮罩
				 */
				handleToggleBtn()
				let isShowChannel = false // 默认不展示(遮罩) 频道按钮
				function toggleBtn(e) {
					e = e || event
					const breadNavBtn = document.querySelector('.bread-nav') // 面包屑导航按钮
					const headMask = document.querySelector('.head-mask') // 头部遮罩区域
					if (isShowChannel) {
						tools.removeClass(breadNavBtn, 'active')
						headMask.style.display = 'none'
					} else {
						tools.addClass(breadNavBtn, 'active')
						headMask.style.display = 'block'
					}
					isShowChannel = !isShowChannel
				}
				function handleToggleBtn() {
					document.querySelector('.bread-nav').addEventListener('touchstart', function (e) {
						toggleBtn()
						e = e || event
						e.stopPropagation()
					})
					document.addEventListener('touchstart', function (e) {
						if (isShowChannel) {
							toggleBtn()
						}
					})
					document.querySelector('.head-mask').addEventListener('touchstart', function (e) {
						e = e || event
						e.stopPropagation()
					})
				}

				/**
				 * 导航滑屏函数
				 */
				drag()
				function drag() {
					const wrapNode = document.querySelector('.content-nav') // 滑屏元素包裹器（布局视口的大小）
					const eleNode = document.querySelector('.content-nav .nav-list') // 滑屏元素的大小
					mark.drag(wrapNode, eleNode)
				}

				/**
				 * 导航点击变色
				 */
				navBtnClick()
				function navBtnClick() {
					const ulNode = document.querySelector('.nav-list') // 导航列表（很大）
					const allLiNode = document.querySelectorAll('.nav-list li')
					ulNode.addEventListener('touchstart', function (e) {
						this.isMove = false
					})
					ulNode.addEventListener('touchmove', function (e) {
						this.isMove = true
					})
					// 保证在移动的过程，不点击变色
					ulNode.addEventListener('touchend', function (e) {
						e = e || event
						if (!this.isMove) {
							Array.prototype.slice.call(allLiNode).map(item => tools.removeClass(item, 'active'))
							let liNode = e.changedTouches[0].target.parentNode
							tools.addClass(liNode, 'active')
						}
					})
				}

				/**
				 * 由于禁止默认事件，失去焦点和获取焦点要手动实现
				 */
				changeFocus()
				function changeFocus() {
					var inputText = document.querySelector("#wrap .head .head-bottom input[type='text']")
					inputText.addEventListener('touchstart', function (ev) {
						ev = ev || event
						this.focus() // 箭头函数的this不可以这样做
						ev.stopPropagation()
						ev.preventDefault()
					})
					document.addEventListener('touchstart', function () {
						inputText.blur()
					})
				}
				/**
				 * 轮播图函数
				 */
				swiper()
				function swiper() {
					const imgArr = ['./img/1.jpg', './img/2.jpg', './img/3.jpg', './img/4.jpg', './img/5.jpg']
					mark.carousel(imgArr)
				}

				/**
				 * 选项卡滑屏切换函数
				 */
				tabSwiper()
				function tabSwiper() {
					const allTabContentNode = document.querySelectorAll('.tab-content')
					Array.prototype.slice.call(allTabContentNode).map(item => move(item))
					function move(itemNode) {
						let startPoint = { x: 0, y: 0 } // 手指开始的位置
						let elePoint = { x: 0, y: 0 } // 滑屏元素的偏移量
						let isFirst = true // 控制touchmove中第一次触发的时候就确定方向
						let isX = true // 是否是X轴方向的
						let isJump = false // 是否跳转了
						let nowIndex = 0 // 选项卡的索引

						itemNode.addEventListener('touchstart', e => {
							if (isJump) {
								return
							}
							e = e || event
							const touchC = e.changedTouches[0]

							startPoint.x = touchC.clientX
							startPoint.y = touchC.clientY
							elePoint.x = mark.css(itemNode, 'translateX')
							elePoint.y = mark.css(itemNode, 'translateY')

							isFirst = true
							isX = true
							isJump = false

							// 滑动的动画
							itemNode.style.transition = 'none'
						})
						itemNode.addEventListener('touchmove', e => {
							// 确保只要是Y轴滑动的就返回
							if (!isX) {
								return
							}
							if (isJump) {
								return
							}
							e = e || event
							const touchC = e.changedTouches[0]

							let nowStartPointX = touchC.clientX
							let nowStartPointY = touchC.clientY
							let disX = nowStartPointX - startPoint.x // 抽象为 手指在滑动过程中的距离
							let disY = nowStartPointY - startPoint.y

							if (isFirst) {
								isFirst = false
								if (Math.abs(disX) < Math.abs(disY)) {
									isX = false
									return
								}
							}

							let translateX = disX + elePoint.x // 移动的距离是 手指距离 + touchstart开始的时候元素的偏移量
							mark.css(itemNode, 'translateX', translateX)

							// 跳转
							jump(itemNode, disX)
						})
						itemNode.addEventListener('touchend', e => {
							if (isJump) {
								return
							}
							e = e || event
							const touchC = e.changedTouches[0]
							const viewWidth = document.documentElement.clientWidth
							let nowStartPointX = touchC.clientX
							let disX = startPoint.x - nowStartPointX

							if (Math.abs(disX) < viewWidth / 3) {
								itemNode.style.transition = '.3s transform'
								mark.css(itemNode, 'translateX', 0)
							}
						})

						// 按比例跳转tab选项卡
						function jump(itemNode, disX) {
							if (isJump) {
								return
							}
							// 现在滑动的距离
							const currentX = mark.css(itemNode, 'translateX')
							const viewWidth = document.documentElement.clientWidth
							const scale = 1 / 4 // 滑动的比例

							if (Math.abs(disX) > viewWidth * scale) {
								isJump = true

								let translateX = 0
								// disX正负代表方向
								itemNode.style.transition = '.5s transform'
								translateX = disX > 0 ? viewWidth : -viewWidth
								// 滑动的动画
								mark.css(itemNode, 'translateX', translateX)

								// 动画执行完毕，回调函数
								itemNode.addEventListener('transitionend', endFun)
								itemNode.addEventListener('webkitTransitionEnd', endFun)

								function endFun() {
									// 循环定时器   			             回调函数的头部第一行清定时器
									// DOM2 绑定 transitionend事件    回调函数的头部第一行解绑事件
									itemNode.removeEventListener('transitionend', endFun)
									itemNode.removeEventListener('webkitTransitionEnd', endFun)

									// 瞬间拉回来，取消动画
									itemNode.style.transition = 'none'

									let loadingNode = itemNode.querySelectorAll('.loding')
									// 左右滑动的是不一样的loading DOM结构
									loadingNode = disX > 0 ? loadingNode[0] : loadingNode[1]
									// 滑屏动画执行完毕后才能显示 loading图片
									loadingNode.style.opacity = 1

									/* 绿色的底部跟随效果 */
									tabFollowBottom()
									function tabFollowBottom() {
										// 显示loading图片的时候，抽象nowIndex
										disX > 0 ? nowIndex-- : nowIndex++
										let tabNodes = itemNode.parentNode.querySelectorAll('.tab-nav a') // 所有的tab选项卡的a标签
										let greenFollowNode = itemNode.parentNode.querySelector('.greenFollow') // 要移动的小绿色
										// 布置绿色条子的动画
										if (nowIndex == tabNodes.length) {
											nowIndex = 0
										}
										if (nowIndex < 0) {
											nowIndex = tabNodes.length - 1
										}
										// 控宽度
										greenFollowNode.style.width = tabNodes[nowIndex].offsetWidth + 'px'
										// 这里的css样式有问题 才 -7
										let translateX = tabNodes[nowIndex].offsetLeft - 11
										mark.css(greenFollowNode, 'translateX', translateX)
										Array.prototype.slice.call(tabNodes).map(item => {
											tools.removeClass(item, 'active')
										})
										tools.addClass(tabNodes[nowIndex], 'active')
									}

									/* 模拟 ajax请求拉回数据 */
									setTimeout(() => {
										let translateX = disX > 0 ? -viewWidth : viewWidth
										mark.css(itemNode, 'translateX', 0)

										// 到这里，jump函数的所有逻辑执行完毕，重置状态
										isJump = false
									}, 500)
								}
							}
						}
					}
				}

				/**
				 * 滚动条Scroll函数
				 */
				// 图片还没有过来高度是错误的！！！
				setTimeout(() => {
					scroll()
				}, 100)
				function scroll() {
					const wrap = document.querySelector('.scroll-warp')
					const content = document.querySelector('.content')
					let callback = {
						start() {
							const scrollNode = this.parentNode.querySelector('._scroll-bar')
							scrollNode.style.opacity = 1
						},
						createBar(wrapNode) {
							const scrollNode = document.createElement('div')
							tools.addClass(scrollNode, '_scroll-bar')
							wrapNode.appendChild(scrollNode)
						},
						move(isOver = false) {
							// this 代表滑动的元素
							const scrollNode = this.parentNode.querySelector('._scroll-bar') // 滚动条DOM结构
							const viewHeight = this.parentNode.offsetHeight // 包裹器的高度
							// 滚动条的高度
							const scrollHeight = viewHeight * (viewHeight / this.offsetHeight)
							const valiadHeight = this.offsetHeight - viewHeight // 有效的滚动距离
							let scale = mark.css(this, 'translateY') / valiadHeight // 滚动的比例
							// 布置样式
							scrollNode.style.height = scrollHeight + 'px'
							let translateY = 0

							// 橡皮筋效果处理
							if (isOver) {
								translateY = scale > 0 ? -scale * scrollHeight : -scale * (viewHeight - scrollHeight)
							} else {
								translateY = Math.abs(scale) * (viewHeight - scrollHeight)
							}
							mark.css(scrollNode, 'translateY', translateY)
						},
						end() {
							const scrollNode = this.parentNode.querySelector('._scroll-bar')
							scrollNode.style.opacity = 0
						}
					}
					mark.scrollBar(wrap, content, callback)
				}
			}
		</script>
	</body>
</html>
